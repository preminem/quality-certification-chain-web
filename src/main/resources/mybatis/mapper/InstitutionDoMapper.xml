<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.InstitutionDoMapper">
    <resultMap id="BaseResultMap" type="com.example.demo.domain.InstitutionDo">
        <id column="institution_number" property="institutionNumber" jdbcType="INTEGER"/>
        <result column="institution_name" property="institutionName" jdbcType="VARCHAR"/>
        <result column="institution_type" property="institutionType" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="isInvalid" property="isInvalid" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    institution_number, institution_name, institution_type, remark, remarks, isInvalid
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.domain.InstitutionDoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from institution
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from institution
        where institution_number = #{institutionNumber,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from institution
    where institution_number = #{institutionNumber,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.demo.domain.InstitutionDoExample">
        delete from institution
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.demo.domain.InstitutionDo">
    insert into institution (institution_number, institution_name,
      institution_type, remark, remarks, isInvalid
      )
    values (#{institutionNumber,jdbcType=INTEGER}, #{institutionName,jdbcType=VARCHAR},
      #{institutionType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{isInvalid,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.demo.domain.InstitutionDo">
        insert into institution
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="institutionNumber != null">
                institution_number,
            </if>
            <if test="institutionName != null">
                institution_name,
            </if>
            <if test="institutionType != null">
                institution_type,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="isInvalid != null">
                isInvalid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="institutionNumber != null">
                #{institutionNumber,jdbcType=INTEGER},
            </if>
            <if test="institutionName != null">
                #{institutionName,jdbcType=VARCHAR},
            </if>
            <if test="institutionType != null">
                #{institutionType,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isInvalid != null">
                #{isInvalid,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.demo.domain.InstitutionDoExample"
            resultType="java.lang.Integer">
        select count(*) from institution
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update institution
        <set>
            <if test="record.institutionNumber != null">
                institution_number = #{record.institutionNumber,jdbcType=INTEGER},
            </if>
            <if test="record.institutionName != null">
                institution_name = #{record.institutionName,jdbcType=VARCHAR},
            </if>
            <if test="record.institutionType != null">
                institution_type = #{record.institutionType,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.remarks != null">
                remarks = #{record.remarks,jdbcType=VARCHAR},
            </if>
            <if test="record.isInvalid != null">
                remarks = #{record.isInvalid,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update institution
        set institution_number = #{record.institutionNumber,jdbcType=INTEGER},
        institution_name = #{record.institutionName,jdbcType=VARCHAR},
        institution_type = #{record.institutionType,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        remarks = #{record.remarks,jdbcType=VARCHAR}
        isInvalid = #{record.isInvalid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.InstitutionDo">
        update institution
        <set>
            <if test="institutionName != null">
                institution_name = #{institutionName,jdbcType=VARCHAR},
            </if>
            <if test="institutionType != null">
                institution_type = #{institutionType,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isInvalid != null">
                isInvalid = #{isInvalid,jdbcType=VARCHAR},
            </if>
        </set>
        where institution_number = #{institutionNumber,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.InstitutionDo">
    update institution
    set institution_name = #{institutionName,jdbcType=VARCHAR},
      institution_type = #{institutionType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where institution_number = #{institutionNumber,jdbcType=INTEGER}
  </update>
    <select id="getByID" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    *
    from
    institution
    where institution_number = #{institution_number}
  </select>
    <select id="selectInstitutionByType" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    *
    from
    institution
    where institution_type = #{institutionType}
  </select>
    <update id="updateState" parameterType="com.example.demo.domain.InstitutionDo">
    update institution
    set isInvalid = #{isInvalid,jdbcType=VARCHAR}
    where institution_number = #{institution_number,jdbcType=INTEGER}
  </update>
</mapper>